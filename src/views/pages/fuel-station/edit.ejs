<div class="row">
  <div class="col-md-12">
    <div class="card pt-4">
      <form id="evStationForm" enctype="multipart/form-data">
        <div class="card-header w-100 justify-content-between border-0 pt-6">
          <a
            class="btn btn-sm btn-primary mt-4"
            style="margin-left: auto"
            href="/fuel-station"
          >
            View Fuel Station
          </a>
          <div class="card-title w-100 justify-content-between">
            <h2 class="card-title fs-2 fw-6">Edit Fuel Station</h2>

            <div class="form-check form-switch form-check-custom form-check-success form-check-solid">
              <label class="form-check-label text-black mt-4" for="kt_flexSwitchCustomDefault_1_1">
                <b>Visibility:</b>
              </label>
              <input
                class="form-check-input mt-4 ms-5 cursor-pointer"
                name="status"
                type="checkbox"
                id="status"
                <%= station.status ? 'checked' : '' %>
              />
            </div>
          </div>
        </div>
        <div class="card-body pt-0 col-md-6">
          <div class="form-group">
            <label for="f_station_name" class="required mb-2">Fuel Station Name:</label>
            <input
              type="text"
              id="f_station_name"
              class="form-control"
              name="f_station_name"
              placeholder="Enter Fuel Station Name"
              value="<%= station.f_station_name %>"
            />
          </div>

          <div class="form-group mt-4">
            <label for="state_id" class="required">Select State:</label>
            <select
              class="form-select"
              aria-label="Select State"
              id="state_id"
              name="state_id"
              data-control="select2"
            >
              <option selected disabled value="">Select State</option>
              <% states.forEach(function(data) { %>
              <option value="<%= data.state_id %>" <%= station.state_id == data.state_id ? 'selected' : '' %> >
                <%= data.state_name %>
              </option>
              <% }); %>
            </select>
          </div>

          <div class="form-group mt-4">
            <label for="city_id" class="required mb-2">Select City:</label>
            <select
              class="form-select"
              aria-label="Select City"
              id="city_id"
              name="city_id"
              data-control="select2"
              required
            >
              <option value="" selected disabled>Select City</option>
              <% cities.forEach(function(city) { %>
              <option value="<%= city.city_id %>" <%= station.city_id == city.city_id ? 'selected' : '' %> >
                <%= city.city_name %>
              </option>
              <% }); %>
            </select>
          </div>

          <div class="form-group mt-4">
            <label for="contact_no" class="mb-2">Contact Number: </label>
            <input
              type="text"
              id="contact_no"
              class="form-control"
              name="contact_no"
              placeholder="Enter Contact Number"
              value="<%= station.contact_no %>"
            />
          </div>

          <div class="form-group mt-4">
            <label for="f_station_location" class="required mb-2">Fuel Station Location:</label>
            <input
              type="text"
              id="f_station_location"
              class="form-control"
              name="f_station_location"
              placeholder="Enter Fuel Station URL"
              value="<%= station.f_station_location %>"
            />
          </div>

          <div class="form-group mt-4">
            <label for="f_station_address" class="mb-2">Fuel Station Address:</label>
            <textarea
              type="text"
              id="f_station_address"
              class="form-control"
              name="f_station_address"
              placeholder="Enter Fuel Station Address"
            ><%= station.f_station_address %></textarea>
          </div>

          <button
            class="btn btn-sm btn-primary mt-4"
            id="submitBtn"
            type="submit"
          >
            Update
          </button>
          <a class="btn btn-sm btn-danger mt-4" href="/fuel-station">Cancel</a>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
  $(document).ready(function () {
    // Reset validation styles on change for select elements
    $("#state_id, #city_id").on("change", function () {
      $(this).removeClass("is-invalid").next(".invalid-feedback").hide();
    });

    // Load cities based on state selection
    $("#state_id").on("change", function () {
      var stateId = $(this).val();
      $("#city_id")
        .empty()
        .append('<option value="" selected disabled>Loading cities...</option>');
      $.ajax({
        url: `/fuel-station/city/${stateId}/state`,
        method: "GET",
        success: function (response) {
          $("#city_id")
            .empty()
            .append('<option value="" selected disabled>Select City</option>');
          if (response && response.cities && response.cities.length > 0) {
            response.cities.forEach(function (city) {
              $("#city_id").append(
                '<option value="' +
                  city.city_id +
                  '">' +
                  city.city_name +
                  "</option>"
              );
            });
          } else {
            $("#city_id").append('<option value="" disabled>No city available</option>');
          }
        },
        error: function () {
          Swal.fire({
            icon: "error",
            title: "Error",
            text: "Failed to fetch cities. Please try again.",
          });
          $("#city_id")
            .empty()
            .append('<option value="" disabled>Select City</option>');
        },
      });
    });

    // Form validation and submission
    $("#evStationForm").validate({
      rules: {
        f_station_name: { required: true, minlength: 2 },
        state_id: { required: true },
        city_id: { required: true },
        f_station_address: { required: true },
        f_station_location: { required: true },
        contact_no: { required: true, minlength: 10 },
      },
      messages: {
        f_station_name: {
          required: "Please enter the station name",
          minlength: "Station name must be at least 2 characters long",
        },
        state_id: { required: "Please select a state" },
        city_id: { required: "Please select a city" },
        f_station_address: { required: "Please enter the station address" },
        f_station_location: { required: "Please enter the station location" },
        contact_no: {
          required: "Please enter a contact number",
          minlength: "Contact number must be at least 10 digits",
        },
      },
      errorPlacement: function (error, element) {
        error.addClass("invalid-feedback");
        error.insertAfter(element);
      },
      highlight: function (element) {
        $(element).addClass("is-invalid");
      },
      unhighlight: function (element) {
        $(element).removeClass("is-invalid");
      },
      submitHandler: function (form) {
        const $submitButton = $("#submitBtn");
        $submitButton.prop("disabled", true);

        const formData = new FormData(form);
        formData.set("status", $("input[name='status']").is(":checked"));

        $.ajax({
          url: "/fuel-station/<%= station.uuid %>",
          method: "POST",
          data: formData,
          processData: false,
          contentType: false,
          success: function (response) {
            Swal.fire({
              icon: "success",
              title: "Success",
              text: "Fuel Station updated successfully!",
            }).then(() => {
              window.location.href = "/fuel-station";
            });
          },
          error: function (xhr) {
            let errorMessage = "An error occurred while updating the fuel station.";
            if (xhr.responseJSON && xhr.responseJSON.message) {
              errorMessage = xhr.responseJSON.message;
            }

            Swal.fire({
              icon: "error",
              title: "Error",
              text: errorMessage,
            });
          },
          complete: function () {
            $submitButton.prop("disabled", false);
          },
        });
      },
    });
  });
</script>
