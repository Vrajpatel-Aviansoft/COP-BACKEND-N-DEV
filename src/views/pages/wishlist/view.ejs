<div class="col-md-12">
  <div class="card">
    <div class="card-header border-0 pt-6">
      <div
        class="
          card-title
          d-flex
          justify-content-between
          align-items-center
          w-100
        "
      >
        <h2 class="card-title fs-3 fw-bold text-gray-900">Wishlist View</h2>
      </div>
    </div>
    <div class="card-body pt-0">
      <table
        id="kt_datatable_dom_positioning_wishlist"
        class="table table-striped table-row-bordered gy-5 gs-7 border rounded"
      >
        <thead>
          <tr class="fw-bold fs-6 text-gray-800 px-7">
            <th>Sr No</th>
            <th>Brand Name</th>
            <th>Model Name</th>
            <th>User Name</th>
            <th>User Contact</th>
            <th>User Selected City</th>
            <th>Wishlist Date</th>
          </tr>
        </thead>
        <tbody>
          <!-- DataTables will populate this -->
        </tbody>
      </table>
    </div>
  </div>
</div>

<script src="/js/datatable/datatable.js"></script>
<script>
  $(document).ready(function () {
    const table = initializeDataTable(
      "#kt_datatable_dom_positioning_wishlist",
      "/wishlist/all",
      [
        {
          data: null,
          name: "sr_no",
          orderable: false,
          render: function (data, type, row, meta) {
            return `<span style="font-size: 1rem;">${meta.row + 1}</span>`;
          },
        },
        {
          data: "model.brand.brand_name",
          name: "Brand",
          orderable: true,
          render: function (data) {
            return `<span style="font-size: 1rem;">${data}</span>`;
          },
        },
        {
          data: "model.model_name",
          name: "Model",
          orderable: true,
          render: function (data) {
            return `<span style="font-size: 1rem;">${data}</span>`;
          },
        },
        {
          data: null, // Use `null` since we are combining fields
          name: "User Name",
          orderable: true,
          render: function (data, type, row) {
            const firstName = row.websitecustomer?.first_name || ""; // Handle null/undefined
            const lastName = row.websitecustomer?.last_name || ""; // Handle null/undefined
            return `<span style="font-size: 1rem;">${firstName} ${lastName}</span>`;
          },
        },
        {
          data: "websitecustomer.contact_no",
          name: "Contact No.",
          orderable: true,
          render: function (data) {
            return `<span style="font-size: 1rem;">${data}</span>`;
          },
        },
        {
          data: "websitecustomer.city.city_name",
          name: "User Selected City",
          orderable: true,
          render: function (data) {
            return `<span style="font-size: 1rem;">${data}</span>`;
          },
        },
        {
          data: "created_date",
          name: "Created Date (DD-MM-YYYY HH:MM AM/PM)",
          orderable: true,
          render: function (data) {
            // Convert the data to a Date object
            const date = new Date(data);

            // Format the date to DD-MM-YYYY
            const formattedDate = `${String(date.getDate()).padStart(
              2,
              "0"
            )}-${String(date.getMonth() + 1).padStart(
              2,
              "0"
            )}-${date.getFullYear()}`;

            // Extract hours and minutes
            let hours = date.getHours();
            const minutes = String(date.getMinutes()).padStart(2, "0");

            // Determine AM/PM
            const ampm = hours >= 12 ? "PM" : "AM";

            // Convert to 12-hour format
            hours = hours % 12 || 12;

            // Combine date and time
            const formattedDateTime = `${formattedDate} ${String(
              hours
            ).padStart(2, "0")}:${minutes} ${ampm}`;

            return `<span style="font-size: 1rem;">${formattedDateTime}</span>`;
          },
        },
      ]
    );
  });
</script>
