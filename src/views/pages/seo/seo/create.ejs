<div class="col-md-12">
  <div class="card">
    <div class="card-header border-0 pt-6">
      <div
        class="card-title d-flex justify-content-between align-items-center w-100"
      >
        <h2 class="card-title fs-3 fw-bold text-gray-900">SEO View</h2>
        <button
          id="kt_drawer_example_dismiss_button"
          class="btn btn-sm btn-primary"
        >
          Create SEO
        </button>
      </div>
    </div>

    <ul
      class="nav nav-tabs nav-line-tabs nav-line-tabs-2x mb-5 fs-6 mt-4"
      style="padding: 0 2rem"
    >
      <li class="nav-item">
        <a
          class="nav-link seoTab active"
          data-bs-toggle="tab"
          data-value="1"
          href="#kt_tab_pane_brand"
          >Brand</a
        >
      </li>
      <li class="nav-item">
        <a
          class="nav-link seoTab"
          data-bs-toggle="tab"
          data-value="2"
          href="#kt_tab_pane_model"
          >Model</a
        >
      </li>
      <li class="nav-item">
        <a
          class="nav-link seoTab"
          data-bs-toggle="tab"
          data-value="3"
          href="#kt_tab_pane_variant"
          >Variant</a
        >
      </li>
      <li class="nav-item">
        <a
          class="nav-link seoTab"
          data-bs-toggle="tab"
          data-value="4"
          href="#kt_tab_pane_page"
          >Page</a
        >
      </li>
    </ul>
    <div class="card-body pt-0">
      <table
        id="kt_datatable_dom_positioning_seo"
        class="table table-striped table-row-bordered gy-5 gs-7 border rounded"
      >
        <thead>
          <tr class="fw-bold fs-6 text-gray-800 px-7">
            <th>Sr No</th>
            <th>Content</th>
            <th>Brand Name</th>
            <th>Model</th>
            <th>Variant</th>
            <th>Page</th>
            <th>Meta Tag</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody>
          <!-- DataTables will populate this -->
        </tbody>
      </table>
    </div>

    <!--begin::View component-->
    <div
      id="kt_drawer_example_dismiss"
      class="bg-white"
      data-kt-drawer="true"
      data-kt-drawer-activate="true"
      data-kt-drawer-toggle="#kt_drawer_example_dismiss_button"
      data-kt-drawer-close="#kt_drawer_example_dismiss_close"
      data-kt-drawer-overlay="true"
      data-kt-drawer-width="{default:'300px', 'md': '600px'}"
    >
      <div class="card w-100 shadow-sm">
        <div class="card-header">
          <h3 class="card-title">Create SEO</h3>
          <div class="card-toolbar">
            <button
              type="button"
              class="btn btn-sm btn-light-danger"
              data-kt-drawer-dismiss="true"
            >
              <i class="ki-duotone ki-cross fs-2"
                ><span class="path1"></span><span class="path2"></span
              ></i>
            </button>
          </div>
        </div>
        <div class="card-body">
          <form id="seoForm">
            <span class="text-danger er_seo_id reset_error"></span>
            <div class="form-group">
              <input type="hidden" id="seo_id" name="seo_id" />
              <input type="hidden" id="uuid" name="uuid" />
              <label for="seo_type" class="mb-2">SEO Type :</label>
              <select
                class="form-select"
                name="seo_type"
                id="seo_type"
                data-control="select2"
              >
                <option value="" selected disabled>Select SEO Type</option>
                <option value="1">Brand</option>
                <option value="2">Model</option>
                <option value="3">Variant</option>
                <option value="4">Page</option>
              </select>
              <span class="text-danger er_seo_type reset_error"></span>
            </div>
            <div
              class="form-group mt-4 brand-container"
              data-select2-id="select2-data-142-f275"
            >
              <label for="brand_id" class="required">Select Brand :</label>
              <select
                class="form-select"
                aria-label="Select Specification "
                id="brand_id"
                name="brand_id"
                data-control="select2"
              >
                <option selected="" disabled="" value="">Select Brand</option>
                <% brands.forEach(function(data) { %>
                <option
                  value="<%= data.brand_id  %>"
                  data-uuid="<%= data.uuid %>"
                >
                  <%= data.brand_name %>
                </option>
                <% }); %>
              </select>
            </div>

            <div class="form-group mt-4 model-container">
              <label for="model_id" class="required mb-2">Select Model:</label>
              <select
                class="form-select"
                aria-label="Select example"
                id="model_id"
                name="model_id"
                data-control="select2"
                required
              >
                <option value="" selected disabled>Select Model</option>
              </select>
            </div>

            <div class="form-group mt-4 variant-container">
              <label for="variant_id" class="required mb-2"
                >Select Variant:</label
              >
              <select
                class="form-select"
                aria-label="Select example"
                id="variant_id"
                name="variant_id"
                data-control="select2"
                required
              >
                <option value="" selected disabled>Select Variant</option>
              </select>
            </div>

            <div class="form-group mt-3">
              <label for="page_id" class="mb-2">Select Page :</label>
              <select
                class="form-select"
                name="page_id"
                id="page_id"
                data-control="select2"
              >
                <option value="" selected disabled>Select Page</option>
                <% pages.forEach(function(data) { %>
                <option
                  value="<%= data.page_id  %>"
                  data-uuid="<%= data.uuid %>"
                >
                  <%= data.page_name %>
                </option>
                <% }); %>
              </select>
            </div>

            <div class="form-group mt-3">
              <label for="meta_tag_id" class="mb-2">Select Meta Tag :</label>
              <select
                class="form-select"
                name="meta_tag_id"
                id="meta_tag_id"
                data-control="select2"
              >
                <option value="" selected disabled>Select Meta Tag</option>
                <% metaTags.forEach(function(data) { %>
                <option
                  value="<%= data.meta_tag_id   %>"
                  data-uuid="<%= data.uuid %>"
                >
                  <%= data.meta_tag_name %>
                </option>
                <% }); %>
              </select>
            </div>

            <div class="form-group mt-3">
              <label for="tag_content" class="mb-2">Tag Content :</label>
              <textarea
                type="text"
                id="tag_content"
                class="form-control"
                name="tag_content"
              >
              </textarea>
              <span class="text-gray-500 mt-2"
                >(Note: If you want to display the current city name in your
                description, then replace "your city name" with "city_name" in
                your sentence.)</span
              >
            </div>

            <button
              class="btn btn-sm btn-light-primary mt-2"
              id="submitBtn"
              type="submit"
            >
              submit
            </button>
            <button
              class="btn btn-sm btn-light-danger mt-2"
              data-kt-drawer-dismiss="true"
            >
              cancel
            </button>
          </form>
        </div>
      </div>
    </div>
    <!--end::View component-->
  </div>
</div>

<script src="/js/datatable/datatable.js"></script>
<script>
  $(document).ready(function () {
    // Initialize DataTable with the default filter for "brand"
    const table = initializeDataTable(
      '#kt_datatable_dom_positioning_seo',
      '/seo/all?tab=brand', // Default to brand filter
      [
        {
          data: null,
          name: 'sr_no',
          orderable: false,
          render: function (data, type, row, meta) {
            return `<span style="font-size: 1rem;">${meta.row + 1}</span>`;
          },
        },
        {
          data: 'tag_content',
          name: 'Tag Content',
          orderable: true,
          render: function (data) {
            return `<span style="font-size: 1rem;">${data}</span>`;
          },
        },
        {
          data: 'brand.brand_name',
          name: 'Brand Name',
          orderable: true,
          render: function (data) {
            return `<span style="font-size: 1rem;">${data ? data : '-'}</span>`;
          },
        },
        {
          data: 'carModel.model_name',
          name: 'Model Name',
          orderable: true,
          render: function (data) {
            return `<span style="font-size: 1rem;">${data ? data : '-'}</span>`;
          },
        },
        {
          data: 'variant.variant_name',
          name: 'Variant Name',
          orderable: true,
          render: function (data) {
            return `<span style="font-size: 1rem;">${data ? data : '-'}</span>`;
          },
        },
        {
          data: 'seoPage.page_name',
          name: 'Page Name',
          orderable: true,
          render: function (data) {
            return `<span style="font-size: 1rem;">${data}</span>`;
          },
        },
        {
          data: 'seoMetaTag.meta_tag_name',
          name: 'Meta Tag Name',
          orderable: true,
          render: function (data) {
            return `<span style="font-size: 1rem;">${data}</span>`;
          },
        },

        {
          data: 'uuid',
          name: 'uuid',
          orderable: false,
          searchable: false,
          render: function (data) {
            const editRoute = `/seo/${data}/edit`;
            return `
             <a href="javascript:void(0);" id="kt_drawer_example_dismiss_button" class="btn-primary edit_record" uuid="${data}" style="padding: 0;">
              <i class="fa fa-pencil fs-4 text-primary"></i>
            </a>
              <a href="javascript:void(0);"
                uuid="${data}"
                class="delete_record btn-danger" style="padding: 0;">
                <i class="fa fa-trash fs-4 text-danger"></i>
              </a>
            `;
          },
        },
      ]
    );

    // Edit button click handler
    $(document).on('click', '.edit_record', function () {
      const uuid = $(this).attr('uuid');

      // Make AJAX request to fetch SEO data
      $.ajax({
        url: `/seo/${uuid}`,
        type: 'GET',
        success: function (response) {
          if (response && response.seoData) {
            const seo = response.seoData[0];

            const brand = seo.brand_id;
            const model = seo.model_id;
            const variant = seo.variant_id;
            const page = seo.page_id;
            const metaTagId = seo.meta_tag_id;
            const metaTag = seo.tag_content;

            // Fill the form fields with the data
            $('#seo_id').val(seo.seo_id);
            $('#uuid').val(seo.uuid);
            $('#seo_type').val(seo.seo_type).trigger('change');
            $('#tag_content').val(seo.tag_content);
            $('#meta_tag_id')
              .val(metaTagId ? metaTagId : '')
              .trigger('change');

            $('#brand_id')
              .val(brand ? brand : '')
              .trigger('change');

            setTimeout(function () {
              $('#model_id')
                .val(model ? model : '')
                .trigger('change');
            }, 1000);

            setTimeout(function () {
              $('#variant_id')
                .val(variant ? variant : '')
                .trigger('change');
            }, 1000);
            $('#page_id')
              .val(page ? page : '')
              .trigger('change');
          } else {
            // Handle case where response does not contain valid SEO data
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: 'Failed to fetch SEO data. Please try again.',
            });
          }
        },
        error: function () {
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'An error occurred while fetching the data. Please try again.',
          });
        },
      });
    });

    // Event listener for tab clicks to adjust DataTable query parameters
    $('.seoTab').on('click', function () {
      const tabValue = $(this).data('value');
      let tab = 'brand';

      if (tabValue === 2) {
        tab = 'model';
      } else if (tabValue === 3) {
        tab = 'variant';
      } else if (tabValue === 4) {
        tab = 'page';
      }

      table.ajax.url(`/seo/all?tab=${tab}`).load();
    });

    // Handling delete record button
    function setupDeleteHandler(selector, table) {
      $(document).on('click', selector, function () {
        const uuid = $(this).attr('uuid');
        Swal.fire({
          title: 'Are you sure?',
          text: "You won't be able to revert this!",
          icon: 'warning',
        }).then((result) => {
          if (result.isConfirmed) {
            $.ajax({
              url: `/seo/${uuid}`,
              type: 'DELETE',
              success: function (response) {
                Swal.fire('Deleted!', 'Seo Data has been deleted.', 'success');
                table.ajax.reload();
              },
            });
          }
        });
      });
    }

    // Call the delete handler and status toggle handler
    setupDeleteHandler('.delete_record', table);

    //function for fetch brand depends models and there variants

    function loadOptions(
      selectElement,
      url,
      placeholder,
      emptyMessage,
      dataKey
    ) {
      $(selectElement)
        .empty()
        .append(
          '<option value="" selected disabled>' + placeholder + '</option>'
        );

      $.ajax({
        url: url,
        method: 'GET',
        success: function (response) {
          $(selectElement)
            .empty()
            .append(
              '<option value="" selected disabled>' + emptyMessage + '</option>'
            );

          if (response && response[dataKey] && response[dataKey].length > 0) {
            response[dataKey].forEach(function (item) {
              let itemKey = dataKey.slice(0, -1); // Get the singular form of the key
              let itemId = item[`${itemKey}_id`]; // Access the '_id' property
              let itemName = item[`${itemKey}_name`]; // Access the '_name' property

              $(selectElement).append(
                `<option value="${itemId}" data-uuid="${item.uuid}">${itemName}</option>`
              );
            });
          } else {
            $(selectElement).append(
              '<option value="" disabled>No data available</option>'
            );
          }
        },
        error: function () {
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Failed to fetch data. Please try again.',
          }).then(() => {
            $(selectElement)
              .empty()
              .append(
                `<option value="" disabled>Select ${placeholder}</option>`
              );
          });
        },
      });
    }

    // Reset validation styles on change for select elements
    $('#brand_id, #model_id, #variant_id').on('change', function () {
      $(this).removeClass('is-invalid').next('.invalid-feedback').hide();
    });

    // Load models based on brand selection
    $('#brand_id').on('change', function () {
      var brandId = $(this).val();
      var uuid = $('#brand_id option:selected').data('uuid');
      if (uuid) {
        loadOptions(
          '#model_id',
          `/seo/model/${uuid}/brand`,
          'Loading models...',
          'Select Model',
          'models'
        );
      }
    });

    // Load variants based on model selection
    $('#model_id').on('change', function () {
      var modelId = $(this).val();
      var uuid = $('#model_id option:selected').data('uuid'); // Getting the UUID from data attribute
      if (uuid) {
        loadOptions(
          '#variant_id',
          `/seo/variant/${uuid}/model`,
          'Loading variants...',
          'Select Variant',
          'variants'
        );
      }
    });

    // Hide and show fields according seo type
    $('.brand-container').hide();
    $('.model-container').hide();
    $('.variant-container').hide();

    $('#seo_type').on('change', function () {
      const seoValue = $(this).val();

      if (seoValue === '1') {
        $('.brand-container').show();
        $('.model-container').hide();
        $('.variant-container').hide();
      } else if (seoValue === '2') {
        $('.brand-container').show();
        $('.model-container').show();
        $('.variant-container').hide();
      } else if (seoValue === '3') {
        $('.brand-container').show();
        $('.model-container').show();
        $('.variant-container').show();
        $('.page_id').hide();
      } else if (seoValue === '4') {
        $('.brand-container').hide();
        $('.model-container').hide();
        $('.variant-container').hide();
      }
    });

    // store and update seo data
    $('#seoForm').validate({
      rules: {
        seo_type: {
          required: true,
        },
        brand_id: {
          required: function () {
            return $('#seo_type').val() == '1';
          },
        },
        model_id: {
          required: function () {
            return $('#seo_type').val() == '2';
          },
        },
        variant_id: {
          required: function () {
            return $('#seo_type').val() == '3';
          },
        },
        page_id: {
          required: true,
        },
        meta_tag_id: {
          required: true,
        },
        tag_content: {
          required: true,
        },
      },
      messages: {
        seo_type: {
          required: 'Please select an SEO type.',
        },
        brand_id: {
          required: 'Please select a brand.',
        },
        model_id: {
          required: 'Please select a model.',
        },
        variant_id: {
          required: 'Please select a variant.',
        },
        page_id: {
          required: 'Please select a page.',
        },
        meta_tag_id: {
          required: 'Please select a meta tag.',
        },
        tag_content: {
          required: 'Please provide tag content.',
        },
      },
      errorPlacement: function (error, element) {
        error.addClass('invalid-feedback');
        error.insertAfter(element);
      },
      highlight: function (element) {
        $(element).addClass('is-invalid');
      },
      unhighlight: function (element) {
        $(element).removeClass('is-invalid');
      },
      submitHandler: function (form) {
        const $submitButton = $('#submitBtn');
        $submitButton.prop('disabled', true);

        const formData = new FormData(form);

        $.ajax({
          url: '/seo/create',
          method: 'POST',
          data: formData,
          processData: false,
          contentType: false,
          success: function (response) {
            Swal.fire({
              icon: 'success',
              title: 'Success',
              text: 'SEO data has been successfully saved.',
            }).then(() => {
              document.querySelector('[data-kt-drawer-dismiss="true"]').click();
            });
          },
          error: function (xhr, status, error) {
            let errorMessage = 'An error occurred while saving the SEO data.';
            if (xhr.responseJSON && xhr.responseJSON.message) {
              errorMessage = xhr.responseJSON.message;
            }
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: errorMessage,
            });
          },
          complete: function () {
            $submitButton.prop('disabled', false);
          },
        });
      },
    });

    // Update the validation when SEO Type changes
    $('#seo_type').on('change', function () {
      // Trigger validation when the SEO type is changed
      $('#seoForm').validate().element('#seo_type');

      // Manually trigger revalidation for dependent fields
      if ($(this).val() == '1') {
        // If SEO Type is Brand, validate brand_id
        $('#seoForm').validate().element('#brand_id');
      } else if ($(this).val() == '2') {
        // If SEO Type is Model, validate model_id
        $('#seoForm').validate().element('#model_id');
      } else if ($(this).val() == '3') {
        // If SEO Type is Variant, validate variant_id
        $('#seoForm').validate().element('#variant_id');
      }
    });
  });
</script>
