<div class="col-md-12">
  <div class="card">
    <div class="card-header border-0 pt-6">
      <div
        class="
          card-title
          d-flex
          justify-content-between
          align-items-center
          w-100
        "
      >
        <h2 class="card-title fs-3 fw-bold text-gray-900">
          Book Test Drive View
        </h2>
      </div>
    </div>
    <div class="card-body pt-0">
      <table
        id="kt_datatable_dom_positioning_book_test_drive"
        class="table table-striped table-row-bordered gy-5 gs-7 border rounded"
      >
        <thead>
          <tr
            class="fw-bold fs-6 text-gray-800 px-7"
            style="white-space: nowrap"
          >
            <th>Sr No</th>
            <th>Booking Date</th>
            <th>Id</th>
            <th>Name</th>
            <th>Contact no.</th>
            <th>Customer Address</th>
            <th>Dealer Details</th>
            <th>Dealer Address</th>
            <th>Car</th>
            <th>Fuel</th>
            <th>Transmission</th>
            <th>Purchase</th>
            <th>Status</th>
          </tr>
        </thead>
        <tbody>
          <!-- DataTables will populate this -->
        </tbody>
      </table>
    </div>
  </div>
</div>

<div id="yourModalId" class="modal fade" tabindex="-1" role="dialog">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Update Status</h5>
        <button
          type="button"
          class="close"
          data-dismiss="modal"
          aria-label="Close"
        >
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <label for="statusVal">Select Status:</label>
        <select name="statusVal" class="form-control">
          <option value="0">Cancelled</option>
          <option value="1">Booked</option>
          <option value="2">Completed</option>
        </select>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-primary" id="submitStatus">
          Update
        </button>
        <button type="button" class="btn btn-secondary" data-dismiss="modal">
          Cancel
        </button>
      </div>
    </div>
  </div>
</div>

<script src="/js/datatable/datatable.js"></script>
<script>
  $(document).ready(function () {
    const table = initializeDataTable(
      "#kt_datatable_dom_positioning_book_test_drive",
      "/book-test-drive/all",
      [
        {
          data: null,
          name: "sr_no",
          orderable: false,
          render: function (data, type, row, meta) {
            return `<span style="font-size: 1rem;">${meta.row + 1}</span>`;
          },
        },
        {
          data: "created_at",
          name: "Created At (DD-MM-YYYY HH:MM AM/PM)",
          orderable: true,
          render: function (data) {
            // Convert the data to a Date object
            const date = new Date(data);

            // Format the date to DD-MM-YYYY
            const formattedDate = `${String(date.getDate()).padStart(
              2,
              "0"
            )}-${String(date.getMonth() + 1).padStart(
              2,
              "0"
            )}-${date.getFullYear()}`;

            // Extract hours and minutes
            let hours = date.getHours();
            const minutes = String(date.getMinutes()).padStart(2, "0");

            // Determine AM/PM
            const ampm = hours >= 12 ? "PM" : "AM";

            // Convert to 12-hour format
            hours = hours % 12 || 12;

            // Combine date and time
            const formattedDateTime = `${formattedDate} ${String(
              hours
            ).padStart(2, "0")}:${minutes} ${ampm}`;

            return `<span style="font-size: 1rem;">${formattedDateTime}</span>`;
          },
        },
        {
          data: "booking_id",
          name: "ID",
          orderable: true,
          render: function (data) {
            return `<span style="font-size: 1rem;">${data}</span>`;
          },
        },
        {
          data: "name",
          name: "Name",
          orderable: true,
          render: function (data) {
            return `<span style="font-size: 1rem;">${data ? data : "-"}</span>`;
          },
        },
        {
          data: "websitecustomer.contact_no",
          name: "Contact No.",
          orderable: true,
          render: function (data) {
            return `<span style="font-size: 1rem;">${data ? data : "-"}</span>`;
          },
        },
        {
          data: "address",
          name: "Customer Address",
          orderable: true,
          render: function (data) {
            return `<span style="font-size: 1rem;">${data ? data : "-"}</span>`;
          },
        },
        {
          data: "dealership.dealer_name",
          name: "Dealer Details",
          orderable: true,
          render: function (data) {
            return `<span style="font-size: 1rem;">${data ? data : "-"}</span>`;
          },
        },
        {
          data: "dealership.address",
          name: "Dealer Address",
          orderable: true,
          render: function (data) {
            return `<span style="font-size: 1rem;">${data ? data : "-"}</span>`;
          },
        },
        {
          data: null, // Use null because we're combining multiple fields
          name: "Brand and Model",
          orderable: true,
          render: function (data, type, row) {
            // Combine brand_name and model_name
            const brandName = row.brand?.brand_name || ""; // Handle null/undefined values
            const modelName = row.model?.model_name || ""; // Handle null/undefined values
            return `<span style="font-size: 1rem;">${brandName} ${modelName}</span>`;
          },
        },
        {
          data: "fuel_types",
          name: "Fuel Type",
          orderable: true,
          render: function (data) {
            return `<span style="font-size: 1rem;">${data ? data : "-"}</span>`;
          },
        },
        {
          data: "transmission",
          name: "Transmission",
          orderable: true,
          render: function (data) {
            return `<span style="font-size: 1rem;">${data ? data : "-"}</span>`;
          },
        },
        {
          data: "estimated_purchase_date",
          name: "Estimated Purchase",
          orderable: true,
          render: function (data) {
            return `<span style="font-size: 1rem;">${data ? data : "-"}</span>`;
          },
        },
        {
          data: "status",
          name: "Status",
          orderable: true,
          render: function (data, type, row) {
            const statusLabels = {
              0: { label: "Cancelled", color: "red" },
              1: { label: "Booked", color: "blue" },
              2: { label: "Completed", color: "green" },
            };

            const status = statusLabels[data] || {
              label: "Unknown",
              color: "gray",
            };

            let statusHtml = `
              <strong style="color:${status.color}; font-size: 1rem;">${status.label}</strong>
            `;

            const hasEditPermission = true; // Replace with actual logic

            if (hasEditPermission) {
              statusHtml += `
                <i class="fa fa-edit text-primary statusEdit" style="cursor: pointer; margin-left: 10px;"
                   data-id="${row.uuid}" data-status="${data}"></i>
              `;
            }

            return statusHtml;
          },
        },
      ]
    );
    $(document).on("click", ".statusEdit", function () {
      const id = $(this).data("id");
      const currentStatus = $(this).data("status");

      $("select[name='statusVal']").val(currentStatus).trigger("change");
      $("#yourModalId").modal("show");
      $("#submitStatus").data("id", id);
    });

    $("#submitStatus").on("click", function () {
      const id = $(this).data("id");
      const newStatus = $("select[name='statusVal']").val();

      $.ajax({
        // url: `/update-status/${id}`,
        url: `/book-test-drive/${uuid}/status`,
        type: "POST",
        data: {
          status: newStatus,
          _token: $("meta[name='csrf-token']").attr("content"),
        },
        success: function (response) {
          $("#kt_datatable_dom_positioning_book_test_drive")
            .DataTable()
            .ajax.reload();
          $("#yourModalId").modal("hide");
        },
        error: function (xhr) {
          alert("Failed to update status. Please try again.");
        },
      });
    });
  });
</script>
